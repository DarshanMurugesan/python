import numpy as np 
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
X=np.random.rand(100,2)
kmeans=KMeans(n_clusters=3)
kmeans.fit(X)
y_kmeans=kmeans.predict(X)
plt.scatter(X[:,0],X[:,1],c=y_kmeans,cmap='viridis')
plt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],s=200,c='red')
plt.show()


import numpy as np 
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
np.random.seed(42)
X=np.random.rand(100,2)
kmeans=KMeans(n_clusters=3,random_state=42)
kmeans.fit(X)
labels=kmeans.labels_
centroids=kmeans.cluster_centers_
plt.figure(figsize=(8,6))
plt.scatter(X[:,0],X[:,1],c=labels,cmap='vridis',marker='o',s=100,label='Data Points')
plt.scatter(centroids[:,0],centroids[:,1],c='red',s=200,marker='x',label='Centroids')
plt.title("K-Means Clustering with 3 Clusters")
plt.xlabel('Feature 1')
plt.ylabel('Feature 2')
plt.legend()
plt.show()


import numpy as np 
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
n_samples=300
X=np.random.rand(n_samples,2)
kmeans=KMeans(n_clusters=4,random_state=42)
kmeans.fit(X)
labels=kmeans.labels_
centroids=kmeans.cluster_centers_
plt.figure(figsize=(10,6))
plt.scatter(centroids[:,0],centroids[:,1],c='red',s=200,marker='X',label='Centroids')
plt.title('K-Means Clustering on Random 2D Points')
plt.xlabel('Feature 1')
plt.ylabel('Feature 2')
plt.legend()
plt.grid(True)
plt.show()
